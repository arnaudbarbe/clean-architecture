version: '3.5'

services:
  postgres:
    container_name: postgresql_clean
    image: postgres:14.5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    volumes:
       - postgres:/data/postgres
       - ./init_db.sql:/docker-entrypoint-initdb.d/create_tables.sql:ro
    ports:
      - 5432:5432
    networks:
      - clean

  cassandra:
    container_name: cassandra_clean
    image: cassandra:3.11.10
    ports:
      - 9042:9042
    volumes:
      - cassandra:/var/lib/cassandra
      - ./cassandra:/docker-entrypoint-initdb.d:ro
    networks:
      - clean

  mongo:
    container_name: mongodb_clean
    image: bitnami/mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo:/bitnami/mongodb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
    networks:
      - clean

  rabbitmq:
    container_name: rabbitmq_clean
    hostname: "rabbitmq"
    image: rabbitmq:3.8.11-management-alpine
    networks:
      - clean
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-etc:/etc/rabbitmq
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq

  keycloak:
    container_name: keycloak_clean
    image: quay.io/keycloak/keycloak:legacy
    networks:
      - clean
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8080:8080
    depends_on:
      - postgres
    volumes:
      - ./realm.json:/tmp/realm.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin   
      KEYCLOAK_IMPORT: /tmp/realm.json
       
networks:
  clean:

volumes:
    postgres:
    cassandra:
    mongo:
    rabbitmq-etc:
    rabbitmq-data:
    rabbitmq-log:
    